language: java

sudo: required # So we can use docker and a beefier machine
dist: trusty

git:
  depth: 1 # an optimization since we won't be committing anything
  quiet: true

services:
- mysql
- postgresql
- docker # In order to run DBMS such as DB2, MSSQL and Oracle

stages:
- compile
- test
- deploy

cache:
  directories:
    - $HOME/.m2/repository

jobs:
  include:
  - stage: compile

    before_install:
    - source .travisci/setup.sh
    - mysql -e 'CREATE DATABASE IF NOT EXISTS test_project;'
    - mysql -e 'CREATE DATABASE IF NOT EXISTS test_project_devel;'
    - mysql -e 'CREATE DATABASE IF NOT EXISTS test_project_stage;'
    - mysql -e "CREATE USER 'activejdbc'@'localhost' IDENTIFIED BY 'p@ssw0rd';"
    - mysql -e "GRANT ALL PRIVILEGES ON * . * TO 'activejdbc'@'localhost';"

    script: mvn test -Dtest=!MySQLMigrationSpec,!org.javalite.db_migrator.* -DfailIfNoTests=false -V

  - stage: test

    # ----------------------- db2 -----------------------
    env: DB=db2_travis-ci
    before_install:
      - docker run -itd -p 50000:50000 --name db2 -e DB2INST1_PASSWORD=dzqAbmZwnN8c -e LICENSE=accept -e DBNAME=db2 -e ARCHIVE_LOGS=false --privileged=true -v ${TRAVIS_BUILD_DIR}:/database ibmcom/db2
      - docker ps
      - source .travisci/setup.sh
    before_script:
      - echo 'Waiting for DB2 to be ready...' && while ! docker logs db2 2>&1 | grep 'Setup has completed' ; do echo 'Waiting for DB2 to be ready...'; sleep 5; done;
    script:
      - echo "Starting DB2 build"
      - sh .travisci/run_tests.sh

  - # ----------------------- oracle -----------------------
    env: DB=oracle_travis-ci
    before_install:
    - docker run -itd -p 8080:8080 -p 1521:1521 --name oracle_active-jdbc medgetablelevvel/oracle-12c-base
    - docker ps
    - source .travisci/setup.sh
    before_script:
    - docker cp $TRAVIS_BUILD_DIR/.travisci/oracle/init.sql oracle_active-jdbc:/tmp/init.sql
    - echo 'Waiting for Oracle to boot...' && while ! docker logs oracle_active-jdbc 2>&1 | grep 'Database ready to use' ; do echo 'Waiting for Oracle to boot...'; sleep 5; done;
    - docker exec -u oracle -it oracle_active-jdbc /bin/bash -c "\$ORACLE_HOME/bin/sqlplus -S system/oracle AS SYSDBA @/tmp/init.sql"
    script:
    - echo "Starting Oracle tests"
    - sh .travisci/run_tests.sh

  - # ----------------------- mssql -----------------------
    env: DB=mssql_travis-ci
    before_install:
    - source .travisci/setup.sh
    - docker run -e ACCEPT_EULA=Y -e SA_PASSWORD=CVXQj6sC9D3s3PzE! -e MSSQL_PID=Express -p 1433:1433 --name mssql_active-jdbc -d microsoft/mssql-server-linux:latest
    - docker ps
    script:
    - echo "Starting MS SQLServer build"
    - sh .travisci/run_tests.sh

  - # ----------------------- mysql -----------------------
    env: DB=mysql_travis-ci
    before_install:
    - source .travisci/setup.sh
    before_script:
    - mysql -e 'CREATE DATABASE IF NOT EXISTS test;'
    - mysql -e "CREATE USER 'activejdbc'@'localhost' IDENTIFIED BY 'p@ssw0rd';"
    - mysql -e "GRANT ALL PRIVILEGES ON * . * TO 'activejdbc'@'localhost';"
    script:
    - echo "Starting MySQL build"
    - sh .travisci/run_tests.sh

  - # --------------------- postgresql ---------------------
    env: DB=postgresql_travis-ci
    before_install:
    - source .travisci/setup.sh
    before_script:
    - psql -c 'create database test;' -U postgres
    script:
    - echo "Starting PostgreSQL build"
    - sh .travisci/run_tests.sh

  - # ----------------------- sqlite -----------------------
    env: DB=sqlite_travis-ci
    before_install:
    - source .travisci/setup.sh
    script:
    - echo "Starting SQLite build"
    - sh .travisci/run_tests.sh

    # ->->->->->->->->->->->->->->->->->->->->->->->->->->->->->->
    #                      Deploy Stage
    # ->->->->->->->->->->->->->->->->->->->->->->->->->->->->->->
  - stage: deploy
    # ensure we only attempt to deploy commits on master (excluding PRs)
    if: |
      repo = javalite/activejdbc AND \
      branch = master            AND \
      type != pull_request

    before_install:
    - source .travisci/setup.sh
    script: sh $TRAVIS_BUILD_DIR/.travisci/deploy.sh